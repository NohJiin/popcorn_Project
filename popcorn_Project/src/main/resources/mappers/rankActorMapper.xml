<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="RankActorDAO">
	<!-- 랭크가 rank_no인 항목 가져오기 -->    
    <select id="selectTop" parameterType="int" resultType="RankActorVO">
        select *
		from (
		select
		row_number() over(order by actorPopularity desc) as rank_no, r.actorPopularity, a.*
		from popcorn.rankactor r, popcorn.actor a
		where r.actorId = a.actorId) top
		where rank_no = #{rank_no}
    </select>
    
    <!-- 페이징하기 위함 -->
	<!-- 전체 랭킹 : 순위별 페이징 -->
    <select id="all" parameterType="RankPageVO" resultType="RankActorVO">
    	select * from(
    	select
		row_number() over(order by actorPopularity desc) as rank_no, r.actorPopularity, a.*
		from popcorn.actor a, popcorn.rankactor r 
		where a.actorId = r.actorId) total
		where total.rank_no between ${start} and ${end}
    </select>
    <!-- 페이지별 목록 불러오기 -->
    <select id="list" parameterType="RankPageVO" resultType="RankActorVO">
    	select * from(
    	select
		row_number() over(order by actorPopularity desc) as rank_no, r.actorPopularity, a.*
		from popcorn.actor a, popcorn.rankactor r 
		where a.actorId = r.actorId) total
		where total.rank_no between ${start} and ${end}
    </select>
    
    <select id="count" resultType="Integer">
    	select count(*)
    	from popcorn.actor
    </select>
    
    
    <!-- 전체 랭킹 중 일부 : 추천목록 --> <!-- 아직 배우 참여작 추천할지 미정 -->
    <select id="recoall" resultType="RankActorVO">
    	select * from popcorn.actor
    </select>
</mapper>